var j:int;
fun main(i:int):int = ( n+j*i where var n:int; );

#{Should output: (locations might vary)
  AstVarDecl(j) @(1.1-1.3)
      AbsAccess(8,_j)
    AstAtomType(INT) @(1.7-1.9)
      describesType:
        Int
  AstFunDecl(main) @(2.1-2.3)
      Frame(_main,24=16+8+0,T0,T1,1)
    {Pars}
      AstParDecl(i) @(2.10-2.10)
          RelAccess(8,8,2)
        AstAtomType(INT) @(2.12-2.14)
          describesType:
            Int
    AstAtomType(INT) @(2.17-2.19)
      describesType:
        Int
    AstWhereExpr @(2.31-2.35)
      exprOfType:
        Int
      {Decls}
          AstVarDecl(n) @(2.37-2.39)
              RelAccess(8,-8,2)
            AstAtomType(INT) @(2.43-2.45)
              describesType:
                Int
      AstBinExpr(ADD) @(2.26-2.26)
        exprOfType:
          Int
        AstNameExpr(n) @(2.25-2.25)
          declaredAt: 2.37-2.39
          exprOfType:
            Int
        AstBinExpr(MUL) @(2.28-2.28)
          exprOfType:
            Int
          AstNameExpr(j) @(2.27-2.27)
            declaredAt: 1.1-1.3
            exprOfType:
              Int
          AstNameExpr(i) @(2.29-2.29)
            declaredAt: 2.10-2.10
            exprOfType:
              Int
}#