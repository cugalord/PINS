#{Test from lecture notes}#

fun main() : int =
(
    2 * f(i + 1, g(4))
    where
    var i : int;
    fun g(x : int) : int = x + 1;
);

fun f(x : int, y : int) : int = x + y;

#{Should output: (locations might vary)
  AstFunDecl(main) @(3.1-3.3)
      Frame(_main,48=16+8+24,T2,T3,1)
    {Pars}
    AstAtomType(INT) @(3.14-3.16)
      describesType:
        Int
    AstWhereExpr @(6.5-6.9)
      exprOfType:
        Int
      exprImc:
        BINOP
          CONST(2)
          CALL(_f)
            TEMP(T2)
            BINOP
              MEM
                BINOP
                  TEMP(T2)
                  CONST(-8)
              CONST(1)
            CALL(L0)
              TEMP(T2)
              CONST(4)
      {Decls}
          AstVarDecl(i) @(7.5-7.7)
              RelAccess(8,-8,2)
            AstAtomType(INT) @(7.13-7.15)
              describesType:
                Int
          AstFunDecl(g) @(8.5-8.7)
              Frame(L0,16=16+0+0,T0,T1,2)
            {Pars}
              AstParDecl(x) @(8.11-8.11)
                  RelAccess(8,8,3)
                AstAtomType(INT) @(8.15-8.17)
                  describesType:
                    Int
            AstAtomType(INT) @(8.22-8.24)
              describesType:
                Int
            AstBinExpr(ADD) @(8.30-8.30)
              exprOfType:
                Int
              exprImc:
                BINOP
                  MEM
                    BINOP
                      TEMP(T0)
                      CONST(8)
                  CONST(1)
              AstNameExpr(x) @(8.28-8.28)
                declaredAt: 8.11-8.11
                exprOfType:
                  Int
                exprImc:
                  MEM
                    BINOP
                      TEMP(T0)
                      CONST(8)
              AstConstExpr(INT,1) @(8.32-8.32)
                exprOfType:
                  Int
                exprImc:
                  CONST(1)
      AstBinExpr(MUL) @(5.7-5.7)
        exprOfType:
          Int
        exprImc:
          BINOP
            CONST(2)
            CALL(_f)
              TEMP(T2)
              BINOP
                MEM
                  BINOP
                    TEMP(T2)
                    CONST(-8)
                CONST(1)
              CALL(L0)
                TEMP(T2)
                CONST(4)
        AstConstExpr(INT,2) @(5.5-5.5)
          exprOfType:
            Int
          exprImc:
            CONST(2)
        AstCallExpr(f) @(5.9-5.9)
          declaredAt: 11.1-11.3
          exprOfType:
            Int
          exprImc:
            CALL(_f)
              TEMP(T2)
              BINOP
                MEM
                  BINOP
                    TEMP(T2)
                    CONST(-8)
                CONST(1)
              CALL(L0)
                TEMP(T2)
                CONST(4)
          {Args}
            AstBinExpr(ADD) @(5.13-5.13)
              exprOfType:
                Int
              exprImc:
                BINOP
                  MEM
                    BINOP
                      TEMP(T2)
                      CONST(-8)
                  CONST(1)
              AstNameExpr(i) @(5.11-5.11)
                declaredAt: 7.5-7.7
                exprOfType:
                  Int
                exprImc:
                  MEM
                    BINOP
                      TEMP(T2)
                      CONST(-8)
              AstConstExpr(INT,1) @(5.15-5.15)
                exprOfType:
                  Int
                exprImc:
                  CONST(1)
            AstCallExpr(g) @(5.18-5.18)
              declaredAt: 8.5-8.7
              exprOfType:
                Int
              exprImc:
                CALL(L0)
                  TEMP(T2)
                  CONST(4)
              {Args}
                AstConstExpr(INT,4) @(5.20-5.20)
                  exprOfType:
                    Int
                  exprImc:
                    CONST(4)
  AstFunDecl(f) @(11.1-11.3)
      Frame(_f,16=16+0+0,T4,T5,1)
    {Pars}
      AstParDecl(x) @(11.7-11.7)
          RelAccess(8,8,2)
        AstAtomType(INT) @(11.11-11.13)
          describesType:
            Int
      AstParDecl(y) @(11.14-11.14)
          RelAccess(8,16,2)
        AstAtomType(INT) @(11.20-11.22)
          describesType:
            Int
    AstAtomType(INT) @(11.27-11.29)
      describesType:
        Int
    AstBinExpr(ADD) @(11.35-11.35)
      exprOfType:
        Int
      exprImc:
        BINOP
          MEM
            BINOP
              TEMP(T4)
              CONST(8)
          MEM
            BINOP
              TEMP(T4)
              CONST(16)
      AstNameExpr(x) @(11.33-11.33)
        declaredAt: 11.7-11.7
        exprOfType:
          Int
        exprImc:
          MEM
            BINOP
              TEMP(T4)
              CONST(8)
      AstNameExpr(y) @(11.37-11.37)
        declaredAt: 11.14-11.14
        exprOfType:
          Int
        exprImc:
          MEM
            BINOP
              TEMP(T4)
              CONST(16)
}#