var a : int;
var b : char;
fun increment(x : int) : int = x + 1;

fun main() : void = {
    a = 0;
    b = 'a';

    while (a < 10) do
        a = increment(a);
        b = b + 1;
    end;
};

#{
Should output (locations might vary):
  AstVarDecl(a) @(1.1-1.3)
    AstAtomType(INT) @(1.9-1.11)
  AstVarDecl(b) @(2.1-2.3)
    AstAtomType(CHAR) @(2.9-2.12)
  AstFunDecl(increment) @(3.1-3.3)
    {Pars}
      AstParDecl(x) @(3.15-3.15)
        AstAtomType(INT) @(3.19-3.21)
    AstAtomType(INT) @(3.26-3.28)
    AstBinExpr(ADD) @(3.34-3.34)
      AstNameExpr(x) @(3.32-3.32)
      AstConstExpr(INT,1) @(3.36-3.36)
  AstFunDecl(main) @(5.1-5.3)
    {Pars}
    AstAtomType(VOID) @(5.14-5.17)
    AstStmtExpr @(5.21-5.21)
      {Stmts}
          AstAssignStmt @(6.5-6.5)
            AstNameExpr(a) @(6.5-6.5)
            AstConstExpr(INT,0) @(6.9-6.9)
          AstAssignStmt @(7.5-7.5)
            AstNameExpr(b) @(7.5-7.5)
            AstConstExpr(CHAR,'a') @(7.9-7.11)
          AstWhileStmt @(9.5-9.9)
            AstBinExpr(LTH) @(9.14-9.14)
              AstNameExpr(a) @(9.12-9.12)
              AstConstExpr(INT,10) @(9.16-9.17)
            AstExprStmt @(10.9-10.9)
              AstStmtExpr @(10.9-10.9)
                {Stmts}
                    AstAssignStmt @(10.9-10.9)
                      AstNameExpr(a) @(10.9-10.9)
                      AstCallExpr(increment) @(10.13-10.21)
                        {Args}
                          AstNameExpr(a) @(10.23-10.23)
                    AstAssignStmt @(11.9-11.9)
                      AstNameExpr(b) @(11.9-11.9)
                      AstBinExpr(ADD) @(11.15-11.15)
                        AstNameExpr(b) @(11.13-11.13)
                        AstConstExpr(INT,1) @(11.17-11.17)
}#